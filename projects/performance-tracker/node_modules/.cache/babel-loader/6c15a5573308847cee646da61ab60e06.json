{"ast":null,"code":"// ag-grid-react v24.1.1\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar agGridColumn_1 = require(\"./agGridColumn\");\n\nvar reactComponent_1 = require(\"./reactComponent\");\n\nvar changeDetectionService_1 = require(\"./changeDetectionService\");\n\nvar AgGridReact =\n/** @class */\nfunction (_super) {\n  __extends(AgGridReact, _super);\n\n  function AgGridReact(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.props = props;\n    _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n    _this.api = null;\n    _this.portals = [];\n    _this.hasPendingPortalUpdate = false;\n    _this.destroyed = false;\n    return _this;\n  }\n\n  AgGridReact.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement('div', {\n      style: this.createStyleForDiv(),\n      className: this.props.className,\n      ref: function (e) {\n        _this.eGridDiv = e;\n      }\n    }, this.portals);\n  };\n\n  AgGridReact.prototype.createStyleForDiv = function () {\n    return __assign({\n      height: '100%'\n    }, this.props.containerStyle || {});\n  };\n\n  AgGridReact.prototype.componentDidMount = function () {\n    var modules = this.props.modules || [];\n    var gridParams = {\n      providedBeanInstances: {\n        agGridReact: this,\n        frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this)\n      },\n      modules: modules\n    };\n    var gridOptions = this.props.gridOptions || {};\n    var children = this.props.children;\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(children)) {\n      gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(children);\n    }\n\n    this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props); // don't need the return value\n\n    new ag_grid_community_1.Grid(this.eGridDiv, this.gridOptions, gridParams);\n    this.api = this.gridOptions.api;\n    this.columnApi = this.gridOptions.columnApi;\n  };\n\n  AgGridReact.prototype.waitForInstance = function (reactComponent, resolve, startTime) {\n    var _this = this;\n\n    if (startTime === void 0) {\n      startTime = Date.now();\n    } // if the grid has been destroyed in the meantime just resolve\n\n\n    if (this.destroyed) {\n      resolve(null);\n      return;\n    }\n\n    if (reactComponent.rendered()) {\n      resolve(reactComponent);\n    } else {\n      if (Date.now() - startTime >= AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS) {\n        console.error(\"ag-Grid: React Component '\" + reactComponent.getReactComponentName() + \"' not created within \" + AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS + \"ms\");\n        return;\n      }\n\n      window.setTimeout(function () {\n        return _this.batchUpdate(function () {\n          return _this.waitForInstance(reactComponent, resolve, startTime);\n        });\n      });\n    }\n  };\n  /**\n   * Mounts a react portal for components registered under the componentFramework.\n   * We do this because we want all portals to be in the same tree - in order to get\n   * Context to work properly.\n   */\n\n\n  AgGridReact.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\n    var _this = this;\n\n    this.portals = __spreadArrays(this.portals, [portal]);\n    this.batchUpdate(function () {\n      return _this.waitForInstance(reactComponent, resolve);\n    });\n  };\n\n  AgGridReact.prototype.batchUpdate = function (callback) {\n    var _this = this;\n\n    if (this.hasPendingPortalUpdate) {\n      callback && callback();\n      return;\n    }\n\n    setTimeout(function () {\n      if (_this.api) {\n        // destroyed?\n        _this.forceUpdate(function () {\n          callback && callback();\n          _this.hasPendingPortalUpdate = false;\n        });\n      }\n    });\n    this.hasPendingPortalUpdate = true;\n  };\n\n  AgGridReact.prototype.destroyPortal = function (portal) {\n    this.portals = this.portals.filter(function (curPortal) {\n      return curPortal !== portal;\n    });\n    this.batchUpdate();\n  };\n\n  AgGridReact.prototype.getStrategyTypeForProp = function (propKey) {\n    if (propKey === 'rowData') {\n      if (this.props.rowDataChangeDetectionStrategy) {\n        return this.props.rowDataChangeDetectionStrategy;\n      } else if (this.isImmutableDataActive()) {\n        return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n      }\n    } // all other cases will default to DeepValueCheck\n\n\n    return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n  };\n\n  AgGridReact.prototype.isImmutableDataActive = function () {\n    return this.props.deltaRowDataMode || this.props.immutableData || this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData);\n  };\n\n  AgGridReact.prototype.shouldComponentUpdate = function (nextProps) {\n    this.processPropsChanges(this.props, nextProps); // we want full control of the dom, as ag-Grid doesn't use React internally,\n    // so for performance reasons we tell React we don't need render called after\n    // property changes.\n\n    return false;\n  };\n\n  AgGridReact.prototype.componentDidUpdate = function (prevProps) {\n    this.processPropsChanges(prevProps, this.props);\n  };\n\n  AgGridReact.prototype.processPropsChanges = function (prevProps, nextProps) {\n    var changes = {};\n    this.extractGridPropertyChanges(prevProps, nextProps, changes);\n    this.extractDeclarativeColDefChanges(nextProps, changes);\n\n    if (Object.keys(changes).length > 0) {\n      ag_grid_community_1.ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi);\n    }\n  };\n\n  AgGridReact.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n    // if columnDefs are provided on gridOptions we use those - you can't combine both\n    // we also skip if columnDefs are provided as a prop directly on AgGridReact\n    if (this.props.gridOptions && this.props.gridOptions.columnDefs || this.props.columnDefs) {\n      return;\n    }\n\n    var debugLogging = !!nextProps.debug;\n    var propKey = 'columnDefs';\n    var currentColDefs = this.gridOptions.columnDefs;\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)) {\n      var detectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\n      var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);\n\n      if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n        if (debugLogging) {\n          console.log(\"agGridReact: colDefs definitions changed\");\n        }\n\n        changes[propKey] = {\n          previousValue: currentColDefs,\n          currentValue: newColDefs\n        };\n      }\n    } else if (currentColDefs && currentColDefs.length > 0) {\n      changes[propKey] = {\n        previousValue: currentColDefs,\n        currentValue: []\n      };\n    }\n  };\n\n  AgGridReact.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\n    var _this = this;\n\n    var debugLogging = !!nextProps.debug;\n    Object.keys(nextProps).forEach(function (propKey) {\n      if (ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES, propKey)) {\n        var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n\n        if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n          if (debugLogging) {\n            console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n          }\n\n          changes[propKey] = {\n            previousValue: prevProps[propKey],\n            currentValue: nextProps[propKey]\n          };\n        }\n      }\n    });\n    ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n      if (_this.props[funcName] !== nextProps[funcName]) {\n        if (debugLogging) {\n          console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n        }\n\n        changes[funcName] = {\n          previousValue: prevProps[funcName],\n          currentValue: nextProps[funcName]\n        };\n      }\n    });\n  };\n\n  AgGridReact.prototype.componentWillUnmount = function () {\n    if (this.api) {\n      this.api.destroy();\n      this.api = null;\n    }\n\n    this.destroyed = true;\n  };\n\n  AgGridReact.prototype.isDisableStaticMarkup = function () {\n    return !!this.props.disableStaticMarkup;\n  };\n\n  AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS = 1000; // a second should be more than enough to instantiate a component\n\n  return AgGridReact;\n}(react_1.Component);\n\nexports.AgGridReact = AgGridReact;\nAgGridReact.propTypes = {\n  gridOptions: PropTypes.object\n};\naddProperties(ag_grid_community_1.ComponentUtil.getEventCallbacks(), PropTypes.func);\naddProperties(ag_grid_community_1.ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(ag_grid_community_1.ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(ag_grid_community_1.ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(ag_grid_community_1.ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(ag_grid_community_1.ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(ag_grid_community_1.ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\n\nfunction addProperties(listOfProps, propType) {\n  listOfProps.forEach(function (propKey) {\n    AgGridReact[propKey] = propType;\n  });\n}\n\nvar ReactFrameworkComponentWrapper =\n/** @class */\nfunction (_super) {\n  __extends(ReactFrameworkComponentWrapper, _super);\n\n  function ReactFrameworkComponentWrapper(agGridReact) {\n    var _this = _super.call(this) || this;\n\n    _this.agGridReact = agGridReact;\n    return _this;\n  }\n\n  ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\n    return new reactComponent_1.ReactComponent(UserReactComponent, this.agGridReact, componentType);\n  };\n\n  return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper);","map":{"version":3,"sources":["/Users/simiyub/Development/code/react/projects/performance-tracker/node_modules/ag-grid-react/lib/agGridReact.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__spreadArrays","il","r","k","a","j","jl","defineProperty","exports","value","React","require","react_1","PropTypes","ag_grid_community_1","agGridColumn_1","reactComponent_1","changeDetectionService_1","AgGridReact","_super","props","_this","changeDetectionService","ChangeDetectionService","api","portals","hasPendingPortalUpdate","destroyed","render","createElement","style","createStyleForDiv","className","ref","e","eGridDiv","height","containerStyle","componentDidMount","modules","gridParams","providedBeanInstances","agGridReact","frameworkComponentWrapper","ReactFrameworkComponentWrapper","gridOptions","children","AgGridColumn","hasChildColumns","columnDefs","mapChildColumnDefs","ComponentUtil","copyAttributesToGridOptions","Grid","columnApi","waitForInstance","reactComponent","resolve","startTime","Date","now","rendered","MAX_COMPONENT_CREATION_TIME_IN_MS","console","error","getReactComponentName","window","setTimeout","batchUpdate","mountReactPortal","portal","callback","forceUpdate","destroyPortal","filter","curPortal","getStrategyTypeForProp","propKey","rowDataChangeDetectionStrategy","isImmutableDataActive","ChangeDetectionStrategyType","IdentityCheck","DeepValueCheck","deltaRowDataMode","immutableData","shouldComponentUpdate","nextProps","processPropsChanges","componentDidUpdate","prevProps","changes","extractGridPropertyChanges","extractDeclarativeColDefChanges","keys","processOnChange","debugLogging","debug","currentColDefs","detectionStrategy","getStrategy","newColDefs","areEqual","log","previousValue","currentValue","forEach","_","includes","ALL_PROPERTIES","changeDetectionStrategy","getEventCallbacks","funcName","componentWillUnmount","destroy","isDisableStaticMarkup","disableStaticMarkup","Component","propTypes","object","addProperties","func","BOOLEAN_PROPERTIES","bool","STRING_PROPERTIES","string","OBJECT_PROPERTIES","ARRAY_PROPERTIES","array","NUMBER_PROPERTIES","number","FUNCTION_PROPERTIES","listOfProps","propType","createWrapper","UserReactComponent","componentType","ReactComponent","BaseComponentWrapper"],"mappings":"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","sourcesContent":["// ag-grid-react v24.1.1\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_1 = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar agGridColumn_1 = require(\"./agGridColumn\");\nvar reactComponent_1 = require(\"./reactComponent\");\nvar changeDetectionService_1 = require(\"./changeDetectionService\");\nvar AgGridReact = /** @class */ (function (_super) {\n    __extends(AgGridReact, _super);\n    function AgGridReact(props) {\n        var _this = _super.call(this, props) || this;\n        _this.props = props;\n        _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n        _this.api = null;\n        _this.portals = [];\n        _this.hasPendingPortalUpdate = false;\n        _this.destroyed = false;\n        return _this;\n    }\n    AgGridReact.prototype.render = function () {\n        var _this = this;\n        return React.createElement('div', {\n            style: this.createStyleForDiv(),\n            className: this.props.className,\n            ref: function (e) {\n                _this.eGridDiv = e;\n            }\n        }, this.portals);\n    };\n    AgGridReact.prototype.createStyleForDiv = function () {\n        return __assign({ height: '100%' }, (this.props.containerStyle || {}));\n    };\n    AgGridReact.prototype.componentDidMount = function () {\n        var modules = this.props.modules || [];\n        var gridParams = {\n            providedBeanInstances: {\n                agGridReact: this,\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this)\n            },\n            modules: modules\n        };\n        var gridOptions = this.props.gridOptions || {};\n        var children = this.props.children;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(children)) {\n            gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(children);\n        }\n        this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props);\n        // don't need the return value\n        new ag_grid_community_1.Grid(this.eGridDiv, this.gridOptions, gridParams);\n        this.api = this.gridOptions.api;\n        this.columnApi = this.gridOptions.columnApi;\n    };\n    AgGridReact.prototype.waitForInstance = function (reactComponent, resolve, startTime) {\n        var _this = this;\n        if (startTime === void 0) { startTime = Date.now(); }\n        // if the grid has been destroyed in the meantime just resolve\n        if (this.destroyed) {\n            resolve(null);\n            return;\n        }\n        if (reactComponent.rendered()) {\n            resolve(reactComponent);\n        }\n        else {\n            if (Date.now() - startTime >= AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS) {\n                console.error(\"ag-Grid: React Component '\" + reactComponent.getReactComponentName() + \"' not created within \" + AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS + \"ms\");\n                return;\n            }\n            window.setTimeout(function () { return _this.batchUpdate(function () { return _this.waitForInstance(reactComponent, resolve, startTime); }); });\n        }\n    };\n    /**\n     * Mounts a react portal for components registered under the componentFramework.\n     * We do this because we want all portals to be in the same tree - in order to get\n     * Context to work properly.\n     */\n    AgGridReact.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\n        var _this = this;\n        this.portals = __spreadArrays(this.portals, [portal]);\n        this.batchUpdate(function () { return _this.waitForInstance(reactComponent, resolve); });\n    };\n    AgGridReact.prototype.batchUpdate = function (callback) {\n        var _this = this;\n        if (this.hasPendingPortalUpdate) {\n            callback && callback();\n            return;\n        }\n        setTimeout(function () {\n            if (_this.api) { // destroyed?\n                _this.forceUpdate(function () {\n                    callback && callback();\n                    _this.hasPendingPortalUpdate = false;\n                });\n            }\n        });\n        this.hasPendingPortalUpdate = true;\n    };\n    AgGridReact.prototype.destroyPortal = function (portal) {\n        this.portals = this.portals.filter(function (curPortal) { return curPortal !== portal; });\n        this.batchUpdate();\n    };\n    AgGridReact.prototype.getStrategyTypeForProp = function (propKey) {\n        if (propKey === 'rowData') {\n            if (this.props.rowDataChangeDetectionStrategy) {\n                return this.props.rowDataChangeDetectionStrategy;\n            }\n            else if (this.isImmutableDataActive()) {\n                return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n            }\n        }\n        // all other cases will default to DeepValueCheck\n        return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n    };\n    AgGridReact.prototype.isImmutableDataActive = function () {\n        return (this.props.deltaRowDataMode || this.props.immutableData) ||\n            (this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData));\n    };\n    AgGridReact.prototype.shouldComponentUpdate = function (nextProps) {\n        this.processPropsChanges(this.props, nextProps);\n        // we want full control of the dom, as ag-Grid doesn't use React internally,\n        // so for performance reasons we tell React we don't need render called after\n        // property changes.\n        return false;\n    };\n    AgGridReact.prototype.componentDidUpdate = function (prevProps) {\n        this.processPropsChanges(prevProps, this.props);\n    };\n    AgGridReact.prototype.processPropsChanges = function (prevProps, nextProps) {\n        var changes = {};\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\n        this.extractDeclarativeColDefChanges(nextProps, changes);\n        if (Object.keys(changes).length > 0) {\n            ag_grid_community_1.ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi);\n        }\n    };\n    AgGridReact.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n        // if columnDefs are provided on gridOptions we use those - you can't combine both\n        // we also skip if columnDefs are provided as a prop directly on AgGridReact\n        if ((this.props.gridOptions && this.props.gridOptions.columnDefs) || this.props.columnDefs) {\n            return;\n        }\n        var debugLogging = !!nextProps.debug;\n        var propKey = 'columnDefs';\n        var currentColDefs = this.gridOptions.columnDefs;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)) {\n            var detectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\n            var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);\n            if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: colDefs definitions changed\");\n                }\n                changes[propKey] =\n                    {\n                        previousValue: currentColDefs,\n                        currentValue: newColDefs\n                    };\n            }\n        }\n        else if (currentColDefs && currentColDefs.length > 0) {\n            changes[propKey] =\n                {\n                    previousValue: currentColDefs,\n                    currentValue: []\n                };\n        }\n    };\n    AgGridReact.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\n        var _this = this;\n        var debugLogging = !!nextProps.debug;\n        Object.keys(nextProps).forEach(function (propKey) {\n            if (ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES, propKey)) {\n                var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n                if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n                    if (debugLogging) {\n                        console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n                    }\n                    changes[propKey] = {\n                        previousValue: prevProps[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n        ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            if (_this.props[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n                }\n                changes[funcName] = {\n                    previousValue: prevProps[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    };\n    AgGridReact.prototype.componentWillUnmount = function () {\n        if (this.api) {\n            this.api.destroy();\n            this.api = null;\n        }\n        this.destroyed = true;\n    };\n    AgGridReact.prototype.isDisableStaticMarkup = function () {\n        return !!this.props.disableStaticMarkup;\n    };\n    AgGridReact.MAX_COMPONENT_CREATION_TIME_IN_MS = 1000; // a second should be more than enough to instantiate a component\n    return AgGridReact;\n}(react_1.Component));\nexports.AgGridReact = AgGridReact;\nAgGridReact.propTypes = {\n    gridOptions: PropTypes.object\n};\naddProperties(ag_grid_community_1.ComponentUtil.getEventCallbacks(), PropTypes.func);\naddProperties(ag_grid_community_1.ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(ag_grid_community_1.ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(ag_grid_community_1.ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(ag_grid_community_1.ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(ag_grid_community_1.ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(ag_grid_community_1.ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\nfunction addProperties(listOfProps, propType) {\n    listOfProps.forEach(function (propKey) {\n        AgGridReact[propKey] = propType;\n    });\n}\nvar ReactFrameworkComponentWrapper = /** @class */ (function (_super) {\n    __extends(ReactFrameworkComponentWrapper, _super);\n    function ReactFrameworkComponentWrapper(agGridReact) {\n        var _this = _super.call(this) || this;\n        _this.agGridReact = agGridReact;\n        return _this;\n    }\n    ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\n        return new reactComponent_1.ReactComponent(UserReactComponent, this.agGridReact, componentType);\n    };\n    return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper));\n"]},"metadata":{},"sourceType":"script"}